springs.push_back(Spring(particles[0], particles[1], diagonal, stiff, damp, color)); // spring_0_1
springs.push_back(Spring(particles[0], particles[2], diagonal, stiff, damp, color)); // spring_0_2
springs.push_back(Spring(particles[0], particles[3], diagonal, stiff, damp, color)); // spring_0_3
springs.push_back(Spring(particles[0], particles[4], diagonal, stiff, damp, color)); // spring_0_4
springs.push_back(Spring(particles[0], particles[5], diagonal, stiff, damp, color)); // spring_0_5
springs.push_back(Spring(particles[0], particles[6], diagonal, stiff, damp, color)); // spring_0_6
springs.push_back(Spring(particles[0], particles[7], diagonal, stiff, damp, color)); // spring_0_7
springs.push_back(Spring(particles[0], particles[8], diagonal, stiff, damp, color)); // spring_0_8
springs.push_back(Spring(particles[0], particles[9], diagonal, stiff, damp, color)); // spring_0_9
springs.push_back(Spring(particles[1], particles[2], diagonal, stiff, damp, color)); // spring_1_2
springs.push_back(Spring(particles[1], particles[3], diagonal, stiff, damp, color)); // spring_1_3
springs.push_back(Spring(particles[1], particles[4], diagonal, stiff, damp, color)); // spring_1_4
springs.push_back(Spring(particles[1], particles[5], diagonal, stiff, damp, color)); // spring_1_5
springs.push_back(Spring(particles[1], particles[6], diagonal, stiff, damp, color)); // spring_1_6
springs.push_back(Spring(particles[1], particles[7], diagonal, stiff, damp, color)); // spring_1_7
springs.push_back(Spring(particles[1], particles[8], diagonal, stiff, damp, color)); // spring_1_8
springs.push_back(Spring(particles[1], particles[9], diagonal, stiff, damp, color)); // spring_1_9
springs.push_back(Spring(particles[2], particles[3], diagonal, stiff, damp, color)); // spring_2_3
springs.push_back(Spring(particles[2], particles[4], diagonal, stiff, damp, color)); // spring_2_4
springs.push_back(Spring(particles[2], particles[5], diagonal, stiff, damp, color)); // spring_2_5
springs.push_back(Spring(particles[2], particles[6], diagonal, stiff, damp, color)); // spring_2_6
springs.push_back(Spring(particles[2], particles[7], diagonal, stiff, damp, color)); // spring_2_7
springs.push_back(Spring(particles[2], particles[8], diagonal, stiff, damp, color)); // spring_2_8
springs.push_back(Spring(particles[2], particles[9], diagonal, stiff, damp, color)); // spring_2_9
springs.push_back(Spring(particles[3], particles[4], diagonal, stiff, damp, color)); // spring_3_4
springs.push_back(Spring(particles[3], particles[5], diagonal, stiff, damp, color)); // spring_3_5
springs.push_back(Spring(particles[3], particles[6], diagonal, stiff, damp, color)); // spring_3_6
springs.push_back(Spring(particles[3], particles[7], diagonal, stiff, damp, color)); // spring_3_7
springs.push_back(Spring(particles[3], particles[8], diagonal, stiff, damp, color)); // spring_3_8
springs.push_back(Spring(particles[3], particles[9], diagonal, stiff, damp, color)); // spring_3_9
springs.push_back(Spring(particles[4], particles[5], diagonal, stiff, damp, color)); // spring_4_5
springs.push_back(Spring(particles[4], particles[6], diagonal, stiff, damp, color)); // spring_4_6
springs.push_back(Spring(particles[4], particles[7], diagonal, stiff, damp, color)); // spring_4_7
springs.push_back(Spring(particles[4], particles[8], diagonal, stiff, damp, color)); // spring_4_8
springs.push_back(Spring(particles[4], particles[9], diagonal, stiff, damp, color)); // spring_4_9
springs.push_back(Spring(particles[5], particles[6], diagonal, stiff, damp, color)); // spring_5_6
springs.push_back(Spring(particles[5], particles[7], diagonal, stiff, damp, color)); // spring_5_7
springs.push_back(Spring(particles[5], particles[8], diagonal, stiff, damp, color)); // spring_5_8
springs.push_back(Spring(particles[5], particles[9], diagonal, stiff, damp, color)); // spring_5_9
springs.push_back(Spring(particles[6], particles[7], diagonal, stiff, damp, color)); // spring_6_7
springs.push_back(Spring(particles[6], particles[8], diagonal, stiff, damp, color)); // spring_6_8
springs.push_back(Spring(particles[6], particles[9], diagonal, stiff, damp, color)); // spring_6_9
springs.push_back(Spring(particles[7], particles[8], diagonal, stiff, damp, color)); // spring_7_8
springs.push_back(Spring(particles[7], particles[9], diagonal, stiff, damp, color)); // spring_7_9
springs.push_back(Spring(particles[8], particles[9], diagonal, stiff, damp, color)); // spring_8_9
